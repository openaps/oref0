[
  {
    "openapscontrib.timezones": {
      "path": ".",
      "module": "openapscontrib.timezones"
    },
    "type": "vendor",
    "name": "openapscontrib.timezones"
  },
  {
    "type": "vendor",
    "name": "mmeowlink.vendors.mmeowlink",
    "mmeowlink.vendors.mmeowlink": {
      "path": ".",
      "module": "mmeowlink.vendors.mmeowlink"
    }
  },
  {
    "type": "report",
    "name": "monitor/cgm-glucose.json",
    "monitor/cgm-glucose.json": {
      "hours": "25.0",
      "device": "cgm",
      "use": "iter_glucose_hours",
      "reporter": "JSON"
    }
  },
  {
    "type": "report",
    "name": "raw-cgm/raw-entries.json",
    "raw-cgm/raw-entries.json": {
      "count": "",
      "use": "oref0_glucose",
      "no_raw": "False",
      "reporter": "JSON",
      "seconds": "",
      "minutes": "",
      "hours": "25",
      "device": "cgm",
      "gaps": "",
      "microseconds": "",
      "threshold": "100",
      "sensor": "",
      "date": "display_time",
      "glucose": ""
    }
  },
  {
    "cgm/ns-glucose.json": {
      "device": "ns-glucose",
      "remainder": "",
      "use": "shell",
      "json_default": "True",
      "reporter": "text"
    },
    "type": "report",
    "name": "cgm/ns-glucose.json"
  },
  {
    "type": "report",
    "monitor/mmtune.json": {
      "device": "pump",
      "use": "mmtune",
      "reporter": "JSON"
    },
    "name": "monitor/mmtune.json"
  },
  {
    "type": "report",
    "settings/model.json": {
      "device": "pump",
      "use": "model",
      "reporter": "JSON"
    },
    "name": "settings/model.json"
  },
  {
    "monitor/clock.json": {
      "device": "pump",
      "use": "read_clock",
      "reporter": "JSON"
    },
    "type": "report",
    "name": "monitor/clock.json"
  },
  {
    "type": "report",
    "name": "cgm/cgm-glucose.json",
    "cgm/cgm-glucose.json": {
      "use": "rezone",
      "reporter": "JSON",
      "astimezone": "False",
      "date": "display_time dateString",
      "adjust": "missing",
      "input": "raw-cgm/raw-entries.json",
      "device": "tz",
      "timezone": ""
    }
  },
  {
    "monitor/clock-zoned.json": {
      "use": "clock",
      "reporter": "JSON",
      "astimezone": "False",
      "date": "None",
      "adjust": "missing",
      "input": "monitor/clock.json",
      "device": "tz",
      "timezone": ""
    },
    "type": "report",
    "name": "monitor/clock-zoned.json"
  },
  {
    "type": "report",
    "name": "monitor/temp_basal.json",
    "monitor/temp_basal.json": {
      "device": "pump",
      "use": "read_temp_basal",
      "reporter": "JSON"
    }
  },
  {
    "monitor/reservoir.json": {
      "device": "pump",
      "use": "reservoir",
      "reporter": "JSON"
    },
    "type": "report",
    "name": "monitor/reservoir.json"
  },
  {
    "monitor/battery.json": {
      "device": "pump",
      "use": "read_battery_status",
      "reporter": "JSON"
    },
    "type": "report",
    "name": "monitor/battery.json"
  },
  {
    "type": "report",
    "name": "monitor/status.json",
    "monitor/status.json": {
      "device": "pump",
      "use": "status",
      "reporter": "JSON"
    }
  },
  {
    "type": "report",
    "name": "monitor/pumphistory.json",
    "monitor/pumphistory.json": {
      "hours": "5.0",
      "device": "pump",
      "use": "iter_pump_hours",
      "reporter": "JSON"
    }
  },
  {
    "settings/pumphistory-24h.json": {
      "hours": "27.0",
      "device": "pump",
      "use": "iter_pump_hours",
      "reporter": "JSON"
    },
    "type": "report",
    "name": "settings/pumphistory-24h.json"
  },
  {
    "monitor/pumphistory-zoned.json": {
      "use": "rezone",
      "reporter": "JSON",
      "astimezone": "False",
      "date": "timestamp dateString start_at end_at created_at",
      "adjust": "missing",
      "input": "monitor/pumphistory.json",
      "device": "tz",
      "timezone": ""
    },
    "type": "report",
    "name": "monitor/pumphistory-zoned.json"
  },
  {
    "type": "report",
    "name": "settings/pumphistory-24h-zoned.json",
    "settings/pumphistory-24h-zoned.json": {
      "use": "rezone",
      "reporter": "JSON",
      "astimezone": "False",
      "date": "timestamp dateString start_at end_at created_at",
      "adjust": "missing",
      "input": "settings/pumphistory-24h.json",
      "device": "tz",
      "timezone": ""
    }
  },
  {
    "type": "report",
    "name": "monitor/iob.json",
    "monitor/iob.json": {
      "profile": "settings/profile.json",
      "use": "shell",
      "clock": "monitor/clock-zoned.json",
      "reporter": "text",
      "json_default": "True",
      "pumphistory": "monitor/pumphistory-zoned.json",
      "device": "iob",
      "remainder": ""
    }
  },
  {
    "type": "report",
    "name": "monitor/meal.json",
    "monitor/meal.json": {
      "profile": "settings/profile.json",
      "carbs": "monitor/glucose.json",
      "clock": "monitor/clock-zoned.json",
      "reporter": "text",
      "json_default": "True",
      "use": "shell",
      "pumphistory": "monitor/pumphistory-zoned.json",
      "basal": "monitor/carbhistory.json",
      "device": "meal",
      "remainder": "",
      "glucose": "settings/basal_profile.json"
    }
  },
  {
    "type": "report",
    "settings/autosens.json": {
      "profile": "settings/profile.json",
      "use": "shell",
      "reporter": "text",
      "basal_profile": "settings/basal_profile.json",
      "json_default": "True",
      "pumphistory": "settings/pumphistory-24h-zoned.json",
      "device": "detect-sensitivity",
      "remainder": "",
      "isf": "settings/insulin_sensitivities.json",
      "glucose": "monitor/glucose.json"
    },
    "name": "settings/autosens.json"
  },
  {
    "type": "report",
    "settings/bg_targets.json": {
      "device": "pump",
      "use": "read_bg_targets",
      "reporter": "JSON"
    },
    "name": "settings/bg_targets.json"
  },
  {
    "settings/insulin_sensitivities.json": {
      "device": "pump",
      "use": "read_insulin_sensitivities",
      "reporter": "JSON"
    },
    "type": "report",
    "name": "settings/insulin_sensitivities.json"
  },
  {
    "settings/carb_ratios.json": {
      "device": "pump",
      "use": "read_carb_ratios",
      "reporter": "JSON"
    },
    "type": "report",
    "name": "settings/carb_ratios.json"
  },
  {
    "settings/basal_profile.json": {
      "device": "pump",
      "use": "read_selected_basal_profile",
      "reporter": "JSON"
    },
    "type": "report",
    "name": "settings/basal_profile.json"
  },
  {
    "settings/settings.json": {
      "device": "pump",
      "use": "read_settings",
      "reporter": "JSON"
    },
    "type": "report",
    "name": "settings/settings.json"
  },
  {
    "settings/profile.json": {
      "use": "shell",
      "bg_targets": "settings/bg_targets.json",
      "preferences": "preferences.json",
      "settings": "settings/settings.json",
      "basal_profile": "settings/basal_profile.json",
      "reporter": "text",
      "json_default": "True",
      "carb_ratios": "settings/carb_ratios.json",
      "device": "get-profile",
      "remainder": "settings/temptargets.json",
      "isf": "settings/insulin_sensitivities.json"
    },
    "type": "report",
    "name": "settings/profile.json"
  },
  {
    "type": "report",
    "name": "enact/suggested.json",
    "enact/suggested.json": {
      "profile": "settings/profile.json",
      "use": "shell",
      "temp_basal": "monitor/temp_basal.json",
      "reporter": "text",
      "json_default": "True",
      "meal": "monitor/meal.json",
      "autosens": "settings/autosens.json",
      "device": "determine-basal",
      "remainder": "",
      "iob": "monitor/iob.json",
      "glucose": "monitor/glucose.json"
    }
  },
  {
    "type": "report",
    "enact/enacted.json": {
      "device": "pump",
      "input": "enact/suggested.json",
      "use": "set_temp_basal",
      "reporter": "JSON"
    },
    "name": "enact/enacted.json"
  },
  {
    "type": "report",
    "upload/pebble.json": {
      "suggested": "enact/suggested.json",
      "use": "shell",
      "temp_basal": "monitor/temp_basal.json",
      "reporter": "text",
      "basal_profile": "settings/basal_profile.json",
      "json_default": "True",
      "meal": "monitor/meal.json",
      "device": "pebble",
      "enacted": "enact/enacted.json",
      "remainder": "",
      "iob": "monitor/iob.json",
      "glucose": "monitor/glucose.json"
    },
    "name": "upload/pebble.json"
  },
  {
    "type": "device",
    "cgm": {
      "vendor": "openaps.vendors.dexcom",
      "extra": "cgm.ini"
    },
    "name": "cgm",
    "extra": {}
  },
  {
    "ns-glucose": {
      "vendor": "openaps.vendors.process",
      "extra": "ns-glucose.ini"
    },
    "type": "device",
    "name": "ns-glucose",
    "extra": {
      "fields": "",
      "cmd": "bash -c \"curl -m 30 -s $NIGHTSCOUT_HOST/api/v1/entries/sgv.json?count=1000 | json -e \\\"this.glucose = this.sgv\\\"\"",
      "args": ""
    }
  },
  {
    "extra": {
      "fields": "",
      "cmd": "oref0",
      "args": ""
    },
    "type": "device",
    "name": "oref0",
    "oref0": {
      "vendor": "openaps.vendors.process",
      "extra": "oref0.ini"
    }
  },
  {
    "extra": {
      "fields": "pumphistory profile clock",
      "cmd": "oref0",
      "args": "calculate-iob"
    },
    "type": "device",
    "name": "iob",
    "iob": {
      "vendor": "openaps.vendors.process",
      "extra": "iob.ini"
    }
  },
  {
    "extra": {
      "fields": "pumphistory profile clock carbs glucose basal",
      "cmd": "oref0",
      "args": "meal"
    },
    "type": "device",
    "name": "meal",
    "meal": {
      "vendor": "openaps.vendors.process",
      "extra": "meal.ini"
    }
  },
  {
    "extra": {
      "fields": "settings bg_targets isf basal_profile preferences carb_ratios",
      "cmd": "oref0",
      "args": "get-profile"
    },
    "type": "device",
    "name": "get-profile",
    "get-profile": {
      "vendor": "openaps.vendors.process",
      "extra": "get-profile.ini"
    }
  },
  {
    "extra": {
      "fields": "glucose pumphistory isf basal_profile profile",
      "cmd": "oref0",
      "args": "detect-sensitivity"
    },
    "type": "device",
    "name": "detect-sensitivity",
    "detect-sensitivity": {
      "vendor": "openaps.vendors.process",
      "extra": "detect-sensitivity.ini"
    }
  },
  {
    "determine-basal": {
      "vendor": "openaps.vendors.process",
      "extra": "determine-basal.ini"
    },
    "type": "device",
    "name": "determine-basal",
    "extra": {
      "fields": "iob temp_basal glucose profile autosens meal",
      "cmd": "oref0",
      "args": "determine-basal"
    }
  },
  {
    "pebble": {
      "vendor": "openaps.vendors.process",
      "extra": "pebble.ini"
    },
    "type": "device",
    "name": "pebble",
    "extra": {
      "fields": "glucose iob basal_profile temp_basal suggested enacted meal",
      "cmd": "oref0",
      "args": "pebble"
    }
  },
  {
    "type": "device",
    "tz": {
      "vendor": "openapscontrib.timezones",
      "extra": "tz.ini"
    },
    "name": "tz",
    "extra": {}
  },
  {
    "openapscontrib.timezones": {
      "path": ".",
      "module": "openapscontrib.timezones"
    },
    "type": "vendor",
    "name": "openapscontrib.timezones"
  },
  {
    "type": "vendor",
    "name": "mmeowlink.vendors.mmeowlink",
    "mmeowlink.vendors.mmeowlink": {
      "path": ".",
      "module": "mmeowlink.vendors.mmeowlink"
    }
  },
  {
    "type": "alias",
    "name": "invoke",
    "invoke": {
      "command": "report invoke"
    }
  },
  {
    "type": "alias",
    "name": "mmtune",
    "mmtune": {
      "command": "! bash -c \"echo -n \\\"mmtune: \\\" && openaps report invoke monitor/mmtune.json 2>/dev/null >/dev/null; grep -v setFreq monitor/mmtune.json | grep -A2 `json -a setFreq -f monitor/mmtune.json` | while read line; do echo -n \\\"$line \\\"; done\""
    }
  },
  {
    "type": "alias",
    "name": "wait-for-silence",
    "wait-for-silence": {
      "command": "! bash -c \"echo -n \\\"Listening: \\\"; for i in `seq 1 100`; do echo -n .; ~/src/mmeowlink/bin/mmeowlink-any-pump-comms.py --port /dev/mmeowlink --wait-for 30 2>/dev/null | egrep -v subg | egrep No && break; done\""
    }
  },
  {
    "wait-for-long-silence": {
      "command": "! bash -c \"echo -n \\\"Listening: \\\"; for i in `seq 1 100`; do echo -n .; ~/src/mmeowlink/bin/mmeowlink-any-pump-comms.py --port /dev/mmeowlink --wait-for 45 2>/dev/null | egrep -v subg | egrep No && break; done\""
    },
    "type": "alias",
    "name": "wait-for-long-silence"
  },
  {
    "type": "alias",
    "name": "monitor-cgm",
    "monitor-cgm": {
      "command": "report invoke raw-cgm/raw-entries.json cgm/cgm-glucose.json"
    }
  },
  {
    "type": "alias",
    "name": "get-ns-glucose",
    "get-ns-glucose": {
      "command": "report invoke cgm/ns-glucose.json"
    }
  },
  {
    "monitor-pump": {
      "command": "report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/pumphistory-zoned.json monitor/clock-zoned.json monitor/iob.json monitor/meal.json monitor/reservoir.json monitor/battery.json monitor/status.json"
    },
    "type": "alias",
    "name": "monitor-pump"
  },
  {
    "type": "alias",
    "ns-temptargets": {
      "command": "! bash -c \"curl -m 30 -s \\\"$NIGHTSCOUT_HOST/api/v1/treatments.json?find\\[created_at\\]\\[\\$gte\\]=`date -d \\\"6 hours ago\\\" -Iminutes`&find\\[eventType\\]\\[\\$regex\\]=Target\\\" > settings/temptargets.json; openaps report invoke settings/profile.json 2>/dev/null >/dev/null; exit 0 \""
    },
    "name": "ns-temptargets"
  },
  {
    "ns-meal-carbs": {
      "command": "! bash -c \"curl -m 30 -s \\\"$NIGHTSCOUT_HOST/api/v1/treatments.json?find\\[carbs\\]\\[\\$exists\\]=true\\\" > monitor/carbhistory.json; oref0-meal monitor/pumphistory-zoned.json settings/profile.json monitor/clock-zoned.json monitor/carbhistory.json monitor/glucose.json settings/basal_profile.json > monitor/meal.json.new; grep -q COB monitor/meal.json.new && mv monitor/meal.json.new monitor/meal.json; exit 0\""
    },
    "type": "alias",
    "name": "ns-meal-carbs"
  },
  {
    "type": "alias",
    "name": "get-settings",
    "get-settings": {
      "command": "report invoke settings/model.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json settings/settings.json settings/carb_ratios.json settings/profile.json"
    }
  },
  {
    "type": "alias",
    "name": "bg-fresh-check",
    "bg-fresh-check": {
      "command": "! bash -c \"cat cgm/glucose.json | json -c \\\"minAgo=(new Date()-new Date(this.dateString))/60/1000; return minAgo < 6 && minAgo > 0 && this.glucose > 30\\\" | grep -q glucose\""
    }
  },
  {
    "get-bg": {
      "command": "! bash -c \"openaps monitor-cgm 2>/dev/null | tail -1 && grep -q glucose cgm/cgm-glucose.json && cp -pu cgm/cgm-glucose.json cgm/glucose.json; cp -pu cgm/glucose.json monitor/glucose.json\""
    },
    "type": "alias",
    "name": "get-bg"
  },
  {
    "type": "alias",
    "name": "get-ns-bg",
    "get-ns-bg": {
      "command": "! bash -c \"openaps get-ns-glucose && cat cgm/ns-glucose.json | json -c \\\"minAgo=(new Date()-new Date(this.dateString))/60/1000; return minAgo < 10 && minAgo > -5 && this.glucose > 30\\\" | grep -q glucose && cp -pu cgm/ns-glucose.json cgm/glucose.json; cp -pu cgm/glucose.json monitor/glucose.json\""
    }
  },
  {
    "gather": {
      "command": "! bash -c \"openaps report invoke monitor/status.json 2>/dev/null >/dev/null && echo -n Ref && test $(cat monitor/status.json | json bolusing) == false && echo -n resh && ( openaps monitor-pump || openaps monitor-pump ) 2>/dev/null >/dev/null && echo ed pumphistory || (echo; exit 1) 2>/dev/null\""
    },
    "type": "alias",
    "name": "gather"
  },
  {
    "type": "alias",
    "autosens": {
      "command": "! bash -c \"(find settings/ -newer settings/autosens.json | grep -q pumphistory-24h-zoned.json || find settings/ -size -5c | grep -q autosens.json || ! find settings/ | grep -q autosens || ! find settings/autosens.json) && openaps invoke settings/autosens.json\""
    },
    "name": "autosens"
  },
  {
    "type": "alias",
    "name": "refresh-old-pumphistory",
    "refresh-old-pumphistory": {
      "command": "! bash -c \"find monitor/ -mmin -15 -size +100c | grep -q pumphistory-zoned || ( echo -n \\\"Old pumphistory: \\\" && openaps gather && openaps enact ) \""
    }
  },
  {
    "refresh-old-pumphistory-24h": {
      "command": "! bash -c \"find settings/ -mmin -120 -size +100c | grep -q pumphistory-24h-zoned || (echo -n Old pumphistory-24h refresh && openaps report invoke settings/pumphistory-24h.json settings/pumphistory-24h-zoned.json 2>/dev/null >/dev/null && echo ed)\""
    },
    "type": "alias",
    "name": "refresh-old-pumphistory-24h"
  },
  {
    "refresh-temp-and-enact": {
      "command": "! bash -c \"if( (find monitor/ -newer monitor/temp_basal.json | grep -q glucose.json && echo glucose.json newer than temp_basal.json ) || (! find monitor/ -mmin -5 -size +5c | grep -q temp_basal && echo temp_basal.json more than 5m old)); then (echo -n Temp refresh && openaps report invoke monitor/temp_basal.json monitor/clock.json monitor/clock-zoned.json monitor/iob.json 2>/dev/null >/dev/null && echo ed && if(cat monitor/temp_basal.json | json -c \\\"this.duration < 27\\\" | grep -q duration); then openaps enact; else echo Temp duration 27m or more; fi); else echo temp_basal.json less than 5m old; fi\""
    },
    "type": "alias",
    "name": "refresh-temp-and-enact"
  },
  {
    "type": "alias",
    "name": "refresh-pumphistory-and-enact",
    "refresh-pumphistory-and-enact": {
      "command": "! bash -c \"if ((find monitor/ -newer monitor/pumphistory-zoned.json | grep -q glucose.json && echo -n glucose.json newer than pumphistory) || (find enact/ -newer monitor/pumphistory-zoned.json | grep -q enacted.json && echo -n enacted.json newer than pumphistory) || (! find monitor/ -mmin -5 | grep -q pumphistory-zoned && echo -n pumphistory more than 5m old) ); then (echo -n \\\": \\\" && openaps gather && openaps enact ); else echo Pumphistory less than 5m old; fi \""
    }
  },
  {
    "refresh-old-profile": {
      "command": "! bash -c \"find settings/ -mmin -60 -size +5c | grep -q settings/profile.json && echo Profile less than 60m old || (echo -n Old settings refresh && openaps get-settings 2>/dev/null >/dev/null && echo ed )\""
    },
    "type": "alias",
    "name": "refresh-old-profile"
  },
  {
    "refresh-profile": {
      "command": "! bash -c \"find settings/ -mmin -10 -size +5c | grep -q settings.json && echo Settings less than 10m old || (echo -n Settings refresh && openaps get-settings 2>/dev/null >/dev/null && echo ed)\""
    },
    "type": "alias",
    "name": "refresh-profile"
  },
  {
    "refresh-pumphistory-24h": {
      "command": "! bash -c \"find settings/ -mmin -20 -size +100c | grep -q pumphistory-24h-zoned && echo Pumphistory-24 less than 20m old || (echo -n pumphistory-24h refresh && openaps report invoke settings/pumphistory-24h.json settings/pumphistory-24h-zoned.json 2>/dev/null >/dev/null && echo ed)\""
    },
    "type": "alias",
    "name": "refresh-pumphistory-24h"
  },
  {
    "merge-pumphistory-long": {
      "command": "! bash -c \"jq -s \\\".[0] + .[1]|unique|sort_by(.timestamp)|reverse\\\" settings/pumphistory-long.json monitor/pumphistory-zoned.json settings/pumphistory-24h-zoned.json > pumphistory-long.json.new && mv pumphistory-long.json.new settings/pumphistory-long.json\""
    },
    "type": "alias",
    "name": "merge-pumphistory-long"
  },
  {
    "type": "alias",
    "name": "enact",
    "enact": {
      "command": "! bash -c \"rm enact/suggested.json; openaps invoke enact/suggested.json && if (cat enact/suggested.json && grep -q duration enact/suggested.json); then ( rm enact/enacted.json; openaps invoke enact/enacted.json ; grep -q duration enact/enacted.json || openaps invoke enact/enacted.json ) 2>&1 | egrep -v \\\"^  |subg_rfspy|handler\\\" ; grep incorrectly enact/suggested.json && ~/src/oref0/bin/clockset.sh 2>/dev/null; cat enact/enacted.json | json -0; fi\""
    }
  },
  {
    "type": "alias",
    "name": "ns-loop",
    "ns-loop": {
      "command": "! bash -c \"echo Starting ns-loop at `date`: && openaps get-ns-bg; openaps autosens; openaps ns-temptargets && echo -n Refreshed temptargets && openaps ns-meal-carbs && echo \\\" and meal-carbs\\\" && openaps upload\""
    }
  },
  {
    "pump-loop": {
      "command": "! bash -c \"sleep $[ ( $RANDOM / 2048 ) ]s; until(echo Starting pump-loop at `date`: && openaps wait-for-silence && openaps refresh-old-pumphistory && openaps refresh-old-pumphistory-24h && openaps refresh-old-profile && openaps refresh-temp-and-enact && openaps refresh-pumphistory-and-enact && openaps refresh-profile && openaps refresh-pumphistory-24h && echo Completed pump-loop at `date` && echo); do echo Error, retrying && [[ $RANDOM > 30000 ]] && openaps wait-for-long-silence && openaps mmtune; sleep 5; done\""
    },
    "type": "alias",
    "name": "pump-loop"
  },
  {
    "pebble": {
      "command": "! bash -c \"grep -q iob monitor/iob.json && grep -q absolute enact/suggested.json && openaps report invoke upload/pebble.json\""
    },
    "type": "alias",
    "name": "pebble"
  },
  {
    "prep-pumphistory-entries": {
      "command": "! bash -c \"cat monitor/pumphistory-zoned.json | json -e \\\"this.dateString = this.timestamp\\\" | json -e \\\"this.medtronic = this._type\\\" | json -e \\\"this.type = \\\\\\\"medtronic\\\\\\\"\\\" | json -e \\\"this.date = new Date(Date.parse(this.timestamp)).getTime( )\\\" > upload/pumphistory-entries.json\""
    },
    "type": "alias",
    "name": "prep-pumphistory-entries"
  },
  {
    "type": "alias",
    "name": "upload-pumphistory-entries",
    "upload-pumphistory-entries": {
      "command": "! bash -c \"openaps prep-pumphistory-entries && ns-upload-entries upload/pumphistory-entries.json\""
    }
  },
  {
    "type": "alias",
    "name": "latest-ns-treatment-time",
    "latest-ns-treatment-time": {
      "command": "! bash -c \"nightscout latest-openaps-treatment $NIGHTSCOUT_HOST | json created_at\""
    }
  },
  {
    "type": "alias",
    "name": "format-latest-nightscout-treatments",
    "format-latest-nightscout-treatments": {
      "command": "! bash -c \"nightscout cull-latest-openaps-treatments monitor/pumphistory-zoned.json settings/model.json $(openaps latest-ns-treatment-time) > upload/latest-treatments.json\""
    }
  },
  {
    "type": "alias",
    "name": "upload-recent-treatments",
    "upload-recent-treatments": {
      "command": "! bash -c \"openaps format-latest-nightscout-treatments && test $(json -f upload/latest-treatments.json -a created_at eventType | wc -l ) -gt 0 && (ns-upload $NIGHTSCOUT_HOST $API_SECRET treatments.json upload/latest-treatments.json ) || echo \\\"No recent treatments to upload\\\"\""
    }
  },
  {
    "type": "alias",
    "name": "format-ns-status",
    "format-ns-status": {
      "command": "! bash -c \"ns-status monitor/clock-zoned.json monitor/iob.json enact/suggested.json enact/enacted.json monitor/battery.json monitor/reservoir.json monitor/status.json > upload/ns-status.json\""
    }
  },
  {
    "upload-ns-status": {
      "command": "! bash -c \"grep -q iob monitor/iob.json && find enact/ -mmin -5 -size +5c | grep -q suggested.json && openaps format-ns-status && grep -q iob upload/ns-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json upload/ns-status.json\""
    },
    "type": "alias",
    "name": "upload-ns-status"
  },
  {
    "type": "alias",
    "name": "upload",
    "upload": {
      "command": "! bash -c \"echo -n Upload && ( openaps upload-ns-status; openaps upload-pumphistory-entries; openaps upload-recent-treatments ) 2>/dev/null >/dev/null && echo ed\""
    }
  }
]
